--This query counts the number of valid orders in January sales data, where the order IDs have a length of 6 characters and are not equal to 'Order ID'
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

--This query counts the number of orders for iPhones in January sales data, where the order IDs have a length of 6 characters and are not equal to 'Order ID'
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE Product='iPhone'
AND length(orderid) = 6
AND orderid <> 'Order ID';

--This query retrieves distinct products and their prices from the January sales data, where the price matches the minimum price found in the entire January sales dataset.
SELECT distinct Product, price
FROM BIT_DB.JanSales
WHERE price in (SELECT min(price) FROM BIT_DB.JanSales);

--This query selects distinct products along with their prices from the "JanSales" table, orders them by price in ascending order, and then limits the result to only the first row, effectively returning the product with the lowest price. It avoids the use of subqueries and unnecessary grouping, which simplifies the query while still achieving the desired result.
SELECT distinct product, price
FROM BIT_DB.JanSales
ORDER BY price ASC LIMIT 1; 

--This query effectively calculates the revenue for each product sold in the January sales data and presents the results grouped by product.
SELECT sum(quantity)*price as revenue
,product
FROM BIT_DB.JanSales
GROUP BY product;

--This query provides insights into the total quantity sold, total revenue generated, and the product for each unique product sold at the specified location during February.
SELECT
sum(Quantity),
product,
sum(quantity)*price as revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

--This query provides two key pieces of information:The number of customers who ordered more than 2 products in February. The average amount spent by these customers on their orders.
SELECT
count(distinct cust.acctnum),
avg(quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
WHERE Feb.Quantity>2
AND length(orderid) = 6
AND orderid <> 'Order ID';